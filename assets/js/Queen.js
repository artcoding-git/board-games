// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  angular.module("app").factory("Queen", [
    "ChessPiece", function(ChessPiece) {
      var Queen;
      return Queen = (function(_super) {
        __extends(Queen, _super);

        Queen.$inject = ["$injector"];

        function Queen($injector) {
          Queen.__super__.constructor.call(this, $injector);
        }

        Queen.prototype.pieceAvailableMoves = function() {
          var cell, result, _ref, _ref1, _ref10, _ref11, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
          result = Queen.__super__.pieceAvailableMoves.apply(this, arguments);
          if (this.cell == null) {
            return result;
          }
          cell = this.cell;
          while (((cell = cell.toLeft()) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref = cell.piece()) != null ? _ref.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = cell.toRight()) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref1 = cell.piece()) != null ? _ref1.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = cell.up()) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref2 = cell.piece()) != null ? _ref2.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = cell.down()) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref3 = cell.piece()) != null ? _ref3.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = (_ref4 = cell.up()) != null ? _ref4.toLeft() : void 0) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref5 = cell.piece()) != null ? _ref5.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = (_ref6 = cell.up()) != null ? _ref6.toRight() : void 0) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref7 = cell.piece()) != null ? _ref7.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = (_ref8 = cell.down()) != null ? _ref8.toLeft() : void 0) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref9 = cell.piece()) != null ? _ref9.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          cell = this.cell;
          while (((cell = (_ref10 = cell.down()) != null ? _ref10.toRight() : void 0) != null) && !cell.piece()) {
            result.push(cell);
          }
          if (((cell != null ? (_ref11 = cell.piece()) != null ? _ref11.player : void 0 : void 0) || this.player) !== this.player) {
            result.push(cell);
          }
          return result;
        };

        return Queen;

      })(ChessPiece);
    }
  ]);

}).call(this);

//# sourceMappingURL=Queen.map
